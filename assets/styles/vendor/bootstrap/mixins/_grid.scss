/// Grid system
//
// Generate semantic grid columns with these mixins.

//modify Boostrap grid mixins for custom props
@use "sass:math";

@mixin make-container($gutter: $grid-gutter-width-half) {
    width: 100%;
    @if (type-of($gutter) == 'string') {
        padding-right: $gutter;
        padding-left: $gutter;
    } @else {
        padding-right: $gutter * 0.5;
        padding-left: $gutter * 0.5;
    }
    margin-right: auto;
    margin-left: auto;
}

@mixin make-row($gutter: $grid-gutter-width-half) {
    display: flex;
    flex-wrap: wrap;
    @if (type-of($gutter) == 'string') {
        margin-right: calc(#{$gutter} * -1);
        margin-left: calc(#{$gutter} * -1);
    } @else {
        margin-right: -$gutter * 0.5;
        margin-left: -$gutter * 0.5;
    }
}

@mixin make-col-ready($gutter: $grid-gutter-width-half) {
    position: relative;
    // Prevent columns from becoming too narrow when at smaller grid tiers by
    // always setting `width: 100%;`. This works because we use `flex` values
    // later on to override this initial width.
    width: 100%;
    @if (type-of($gutter) == 'string') {
        padding-right: $gutter;
        padding-left: $gutter;
    } @else {
        padding-right: $gutter * 0.5;
        padding-left: $gutter * 0.5;
    }
}


// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      max-width: $container-max-width;
    }
  }
}

@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size * (1 / $columns));
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size * (1 / $columns));
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: $size * (1 / $columns);
  margin-left: if($num == 0, 0, percentage($num));
}
